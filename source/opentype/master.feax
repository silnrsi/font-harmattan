#**********************************
# This file is part of Harmattan font family (http://software.sil.org/harmattan/) 
# and is Copyright (c) 2014-2019 SIL International (http://www.sil.org/),
# with Reserved Font Names "Harmattan" and "SIL".
#
# This Font Software is licensed under the SIL Open Font License, Version 1.1.
#
# You should have received a copy of the license along with this Font Software.
# If this is not the case, go to (http://scripts.sil.org/OFL) for all the
# details including an FAQ.
#**********************************


#**********************************
#  Language Systems
#**********************************

languagesystem arab dflt ;
languagesystem arab KUR  ;
languagesystem arab SND  ;
languagesystem arab URD  ;
languagesystem arab WLF  ;
languagesystem latn dflt ;



#**********************************
#  Lookups
#**********************************

#********************
# Subtitution rules *
#********************

lookup SmallMaddah {
  lookupflag 0 ;
    sub @Maddah by @Maddah.small ;
} SmallMaddah;

lookup DecomposeForColor {
  lookupflag IgnoreMarks ;
    # NB: For Harmattan, the following is doing extra work by decomposing 
    #     alef+hamza because that will just get recomposed by LigaturesForWarsh but
    #     I'd rather keep the code in its most applicable form for other projects:
    sub @AlefPlusMark by alef-ar @AlefMark ;
} DecomposeForColor;

#********************
# Font rendering check
#
# The following three lookups change "RenderingUnknown" to "RenderingOpenType"

lookup FontCheck_Unknow {
  lookupflag IgnoreMarks;
    sub [U n k o w ] by [O p e T y];
} FontCheck_Unknow;

lookup FontCheck_n {
  lookupflag IgnoreMarks;
    sub n by p e;
} FontCheck_n;

lookup FontCheck {
  lookupflag IgnoreMarks ;
    sub [R] e n d e r i n g 
      U' lookup FontCheck_Unknow 
      n' lookup FontCheck_Unknow
      k' lookup FontCheck_Unknow
      n'  
      o' lookup FontCheck_Unknow 
      w' lookup FontCheck_Unknow 
      n' lookup FontCheck_n;
} FontCheck;


#********************
# Basic Arabic shaping:

lookup ltrFina {
  lookupflag IgnoreMarks ;
    sub [@DualLinkIsol @RightLinkIsol] by [@DualLinkFina @RightLinkFina] ;
} ltrFina;

lookup ltrMedi {
  lookupflag IgnoreMarks ;
    sub @DualLinkIsol by @DualLinkMedi ;
} ltrMedi;

lookup ltrInit {
  lookupflag IgnoreMarks ;
    sub @DualLinkIsol by @DualLinkInit ;
} ltrInit;

#********************
# required ligatures 

#********
# Allah "ligature" (implemented by variant forms for glyphs rather than by ligature glyph):

lookup AllahSubs1 {
  lookupflag 0;
  	sub alef-ar      by alef-ar.allah;
  	sub alef-ar.fina by alef-ar.allah.fina;
    sub lam-ar.init  by lam-ar.allah1.init;
    sub lam-ar.medi  by lam-ar.allah1.medi;
} AllahSubs1;

lookup AllahSubs2 {
  lookupflag 0;
    sub lam-ar.medi     by lam-ar.allah2.medi;
    sub heh-ar.fina     by heh-ar.allah.fina;
    sub hehgoal-ar.fina by hehgoal-ar.allah.fina;
} AllahSubs2;

lookup AllahSubs3 {
  lookupflag 0;
    sub lam-ar.medi by lam-ar.allah2.medi shadda-ar alefabove-ar ;  # insert shadda-alef
} AllahSubs3;

lookup AllahLigatures {
  lookupflag 0;
    # Rule 3: alefIso-lam-lam-heh
    sub alef-ar' lookup AllahSubs1
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs3
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub alef-ar' lookup AllahSubs1
        @MarksAny'
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs3
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub alef-ar' lookup AllahSubs1
        @MarksAny' 
        @MarksAny'
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs3
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 3: alef_lam-lam-shadda-alef-heh
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        @MarksAny' 
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 3: alef-lam-lam-alef-shadda-heh
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [alef-ar alef-ar.fina]' lookup AllahSubs1
        @MarksAny' 
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 2: lamInit-lam-shadda-alef-heh
    sub [@RightLinkIsol @RightLinkFina]
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@RightLinkIsol @RightLinkFina]
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@RightLinkIsol @RightLinkFina]
        @MarksAny' 
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 2: lamInit-lam-alef-shadda-heh
    sub [@RightLinkIsol @RightLinkFina]
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@RightLinkIsol @RightLinkFina]
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@RightLinkIsol @RightLinkFina]
        @MarksAny' 
        @MarksAny' 
        lam-ar.init' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 2: lamMedi-lam-shadda-alef-heh
    sub [@DualLinkIsol @DualLinkFina]
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@DualLinkIsol @DualLinkFina]
        @MarksAny' 
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@DualLinkIsol @DualLinkFina]
        @MarksAny' 
        @MarksAny' 
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    # Rule 2: lamMedi-lam-alef-shadda-heh
    sub [@DualLinkIsol @DualLinkFina]
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@DualLinkIsol @DualLinkFina]
        @MarksAny' 
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
    sub [@DualLinkIsol @DualLinkFina]
        @MarksAny' 
        @MarksAny' 
        lam-ar.medi' lookup AllahSubs1
        lam-ar.medi' lookup AllahSubs2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        [heh-ar.fina hehgoal-ar.fina]' lookup AllahSubs2;
} AllahLigatures;  
        
#********
# "touching" Warsh diacritics (implemented as ligatures)

# Make sure these sequences get ligated so the subsequent (optional) substitutions work

@HamzaAny = [ hamzaabove-ar hamzabelow-ar ];

lookup LigaturesForWarsh1 {
  lookupflag UseMarkFilteringSet @HamzaAny;
    sub lam-ar.init' hamzaabove-ar' @AlefFin by lam_hamza-ar.preAlef.init;
} LigaturesForWarsh1;

lookup LigaturesForWarsh2 {
  lookupflag UseMarkFilteringSet @HamzaAny ;
    sub alef-ar hamzaabove-ar by alefHamzaabove-ar ;
    sub alef-ar.fina hamzaabove-ar by alefHamzaabove-ar.fina ;
    sub alef-ar hamzabelow-ar by alefHamzabelow-ar ;
    sub alef-ar.fina hamzabelow-ar by alefHamzabelow-ar.fina ;
} LigaturesForWarsh2;

@HamzaKasraFatha = [ @HamzaAny kasra-ar kasra-ar.lowered fatha-ar ] ;

lookup LigaturesForWarsh3 {
  lookupflag UseMarkFilteringSet @HamzaKasraFatha ;
    sub alef-ar kasra-ar         by alef_kasra-ar ;
    sub alef-ar kasra-ar.lowered by alef_kasra-ar ;
    sub alef-ar fatha-ar         by alef_fatha-ar ;
} LigaturesForWarsh3;

#********
# Substitutions for Lam-Alef "ligature" (implemented
# as cursively connected components, not a ligature).

lookup LamAlefLigatures {
  lookupflag IgnoreMarks ;
  # Subtable: Ligatures\Part1
    sub [@LamIni @LamMed]' @AlefFin by [@LamIniBeforeAlef @LamMedBeforeAlef];
  # Subtable: Ligatures\Part2a
    sub [@LamIniBeforeAlef lam_hamza-ar.preAlef.init] @AlefFin' by @AlefFinAfterLamIni;
  # Subtable: Ligatures\Part2b
    sub [@LamMedBeforeAlef                          ] @AlefFin' by @AlefFinAfterLamMed ;
} LamAlefLigatures;


#********************
# Reordering of madda: moving it beyond anything in groups 1A, 2A, or 3A

lookup ReorderMaddaVowel1_target {
  lookupflag 0 ;
    sub @MarkGroup1A by @MarkGroup1A madda-ar.small ;
    sub @MarkGroup2A by @MarkGroup2A madda-ar.small ;
    sub @MarkGroup3A by @MarkGroup3A madda-ar.small ;
} ReorderMaddaVowel1_target ;

lookup ReorderMaddaVowel1 {
  lookupflag 0 ;
    sub madda-ar.small [ @MarkGroup1A @MarkGroup2A @MarkGroup3A ]' lookup ReorderMaddaVowel1_target ;
} ReorderMaddaVowel1;

lookup ReorderMaddaVowel2_target {
  lookupflag 0 ;
    sub madda-ar.small @MarkGroup1A by @MarkGroup1A ;
    sub madda-ar.small @MarkGroup2A by @MarkGroup2A ;
    sub madda-ar.small @MarkGroup3A by @MarkGroup3A ;
} ReorderMaddaVowel2_target ;

lookup ReorderMaddaVowel2 {
  lookupflag 0 ;
    sub madda-ar.small' lookup ReorderMaddaVowel2_target [ @MarkGroup1A @MarkGroup2A @MarkGroup3A ]  madda-ar.small ;
} ReorderMaddaVowel2;

#********************
# Language CALTs

lookup SindhiCALT {
  lookupflag 0 ;
    sub heh-ar.medi by heh-ar.knottedHigh.medi ;
    sub heh-ar.fina by heh-ar.knottedHigh.fina ;
    sub heh-ar by heh-ar.knotted ;
    sub six-persian by six-persian.urdu ;
    sub seven-persian by seven-persian.urdu ;
    sub @Meem by @Meem.sindhi ;
    sub @Kasra by @Kasra_lowered ;

} SindhiCALT;

lookup UrduCALT {
  lookupflag 0 ;
    sub heh-ar.init by heh-ar.hooked.init ;
    sub heh-ar.medi by heh-ar.hooked.medi ;
    sub heh-ar.fina by heh-ar.hooked.fina ;
    sub four-persian by four-persian.urdu ;
    sub six-persian by six-persian.urdu ;
    sub seven-persian by seven-persian.urdu ;
    sub @Kasra by @Kasra_lowered ;
} UrduCALT;

lookup KurdishCALT {
  lookupflag 0 ;
    sub heh-ar.fina by heh-ar.knottedHigh.fina ;
    sub heh-ar by heh-ar.knotted ;
    sub @Kasra_lowered by @Kasra ;
} KurdishCALT;

lookup WolofCALT {
  lookupflag 0 ;
    sub @cno_loclWLF by @c_loclWLF ;
    sub @Damma by @Damma_short ;
    sub @Kasra by @Kasra_lowered ;
} WolofCALT;

#********************
# Substitutions for subtendng marks

lookup SignWith_4digits_target {
  lookupflag IgnoreMarks ;
    sub @cno_4 by @c_4 ;
} SignWith_4digits_target ;

lookup SignWith_3digits_target {
  lookupflag IgnoreMarks ;
    sub @cno_3 by @c_3 ;
} SignWith_3digits_target ;

lookup SignWith_2digits_target {
  lookupflag IgnoreMarks ;
    sub @cno_2 by @c_2 ;
} SignWith_2digits_target ;

lookup SignDigits_ToMedium_target {
  lookupflag IgnoreMarks ;
    sub @DigitsAny by @DigitsAnyMedium ;
} SignDigits_ToMedium_target ;

lookup SignDigits_ToSmall_target {
  lookupflag IgnoreMarks ;
    sub @DigitsAny by @DigitsAnySmall ;
} SignDigits_ToSmall_target ;

lookup SignWithDigits {
  lookupflag IgnoreMarks ;
  # Uniscribe or HarfBuzz 'latn'
    sub [ year-ar samvat-ar pagenumber-ar numbermark-ar ]' lookup SignWith_4digits_target 
        @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target ;
    sub [ number-ar year-ar samvat-ar pagenumber-ar numbermark-ar ]' lookup SignWith_3digits_target 
        @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target ;
    sub [ endofayah-ar endofayah-ar.alt endofayah-ar.altB ]' lookup SignWith_3digits_target 
        @DigitsAny' lookup SignDigits_ToSmall_target  @DigitsAny' lookup SignDigits_ToSmall_target  @DigitsAny' lookup SignDigits_ToSmall_target ;
    sub [ number-ar year-ar samvat-ar footnotemarker-ar pagenumber-ar numbermark-ar endofayah-ar endofayah-ar.alt endofayah-ar.altB ]' lookup SignWith_2digits_target 
        @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target ;
    sub [ number-ar year-ar samvat-ar footnotemarker-ar pagenumber-ar numbermark-ar endofayah-ar endofayah-ar.alt endofayah-ar.altB ]
        @DigitsAny' lookup SignDigits_ToMedium_target ;
  # HarfBuzz 'arab'
    sub @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target 
        [ year-ar samvat-ar pagenumber-ar numbermark-ar ]' lookup SignWith_4digits_target ;
    sub @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target 
        [ number-ar year-ar samvat-ar pagenumber-ar numbermark-ar ]' lookup SignWith_3digits_target ;
    sub @DigitsAny' lookup SignDigits_ToSmall_target  @DigitsAny' lookup SignDigits_ToSmall_target  @DigitsAny' lookup SignDigits_ToSmall_target  
        [ endofayah-ar endofayah-ar.alt endofayah-ar.altB ]' lookup SignWith_3digits_target ;
    sub @DigitsAny' lookup SignDigits_ToMedium_target @DigitsAny' lookup SignDigits_ToMedium_target 
        [ number-ar year-ar samvat-ar footnotemarker-ar pagenumber-ar numbermark-ar endofayah-ar endofayah-ar.alt endofayah-ar.altB ]' lookup SignWith_2digits_target ;
    sub @DigitsAny' lookup SignDigits_ToMedium_target 
        [ number-ar year-ar samvat-ar footnotemarker-ar pagenumber-ar numbermark-ar endofayah-ar endofayah-ar.alt endofayah-ar.altB ] ;
} SignWithDigits;


#********************
# Lookups for user-selectable features

#********************
# Warsh Alternates: TypeTuner lookups:

lookup WarshAlternatesTT1 {
  lookupflag IgnoreMarks ;
    sub alefHamzaabove-ar by alefHamzaabove-ar.warsh ;
    sub alefHamzaabove-ar.fina by alefHamzaabove-ar.warsh.fina ;
    sub alefHamzabelow-ar by alefHamzabelow-ar.warsh ;
    sub alefHamzabelow-ar.fina by alefHamzabelow-ar.warsh.fina ;
    sub lam_hamza-ar.preAlef.init by lam_hamza-ar.preAlef.warsh.init ;
} WarshAlternatesTT1;

lookup WarshAlternatesTT2 {
  lookupflag IgnoreMarks ;
    sub alefHamzaabove-ar by alefHamzaabove-ar.warsh ;
    sub alefHamzaabove-ar.fina by alefHamzaabove-ar.warsh.fina ;
    sub alefHamzabelow-ar by alefHamzabelow-ar.warsh ;
    sub alefHamzabelow-ar.fina by alefHamzabelow-ar.warsh.fina ;
    sub lam_hamza-ar.preAlef.init by lam_hamza-ar.preAlef.warsh.init ;
    sub alef_fatha-ar by alef_fatha-ar.warsh ;
    sub alef_kasra-ar by alef_kasra-ar.warsh ;
} WarshAlternatesTT2;

# Warsh alternates: cv02

lookup WarshAlternates {
  lookupflag IgnoreMarks ;
    # Hamza touching is for cv02=1 or cv02=2 :
    sub alefHamzaabove-ar from [ alefHamzaabove-ar.warsh alefHamzaabove-ar.warsh ] ;
    sub alefHamzaabove-ar.fina from [ alefHamzaabove-ar.warsh.fina alefHamzaabove-ar.warsh.fina ] ;
    sub alefHamzabelow-ar from [ alefHamzabelow-ar.warsh alefHamzabelow-ar.warsh ] ;
    sub alefHamzabelow-ar.fina from [ alefHamzabelow-ar.warsh.fina alefHamzabelow-ar.warsh.fina ] ;
    sub lam_hamza-ar.preAlef.init from [ lam_hamza-ar.preAlef.warsh.init lam_hamza-ar.preAlef.warsh.init ] ;
    # fatha and kasra touching isolate alef happens with cv02=2 :
    sub alef_fatha-ar from [ alef_fatha-ar alef_fatha-ar.warsh ] ;
    sub alef_kasra-ar from [ alef_kasra-ar alef_kasra-ar.warsh ] ;
} WarshAlternates;


#********************
# Jeem/Hah medial alternate: cv08

lookup JeemHahMedAlternate {
  lookupflag IgnoreMarks ;
    sub @cno_hand by @c_hand ;
} JeemHahMedAlternate;

#********************
# Dal alternate: cv12

lookup DalAlternate {
  lookupflag IgnoreMarks ;
    sub @cno_loclWLF by @c_loclWLF ;
} DalAlternate;

#********************
# Sad/Dad "half" form alternate: cv20

lookup SadDadAlternate {
  lookupflag IgnoreMarks ;
    sub @cno_half by @c_half ;
} SadDadAlternate;

#********************
# Meem alternate: cv44

lookup MeemAlternate {
  lookupflag IgnoreMarks ;
    sub @Meem by @Meem.sindhi ;
} MeemAlternate;

#********************
# Heh Alternates: TypeTuner lookups:

lookup SindhiHeh {
    sub heh-ar.medi by heh-ar.knottedHigh.medi ;
    sub heh-ar.fina by heh-ar.knottedHigh.fina ;
    sub heh-ar by heh-ar.knotted ;
} SindhiHeh;

lookup UrduHeh {
    sub heh-ar.init by heh-ar.hooked.init ;
    sub heh-ar.medi by heh-ar.hooked.medi ;
    sub heh-ar.fina by heh-ar.hooked.fina ;
} UrduHeh;

lookup KurdishHeh {
    sub heh-ar.fina by heh-ar.knottedHigh.fina ;
    sub heh-ar by heh-ar.knotted ;
} KurdishHeh;

# Heh alternates: cv48

lookup HehAlternates {
  lookupflag IgnoreMarks ; # 1 = Sindhi-style        2 = Urdu-style     3 = Kurdish-style 
    sub heh-ar      from   [ heh-ar.knotted          heh-ar             heh-ar.knotted          ] ;
    sub heh-ar.init from   [ heh-ar.init             heh-ar.hooked.init heh-ar.init             ] ;
    sub heh-ar.medi from   [ heh-ar.knottedHigh.medi heh-ar.hooked.medi heh-ar.medi             ] ;
    sub heh-ar.fina from   [ heh-ar.knottedHigh.fina heh-ar.hooked.fina heh-ar.knottedHigh.fina ] ;
} HehAlternates;

#********************
# Arabic U alternate: cv50

lookup UAlternate {
  lookupflag 0 ;
    sub @U by @U_filled ;
} UAlternate;

#********************
# Maddah Alternate: cv60

lookup MaddahAlternate {
  lookupflag 0 ;
    sub @Maddah.small by @Maddah ;
} MaddahAlternate;


#********************
# Kasra Alternates: TypeTuner lookups

lookup KasraLow {
  lookupflag 0 ;
    sub @Kasra by @Kasra_lowered;
} KasraLow;

lookup KasraHigh {
  lookupflag 0 ;
    sub @Kasra_lowered by @Kasra;
} KasraHigh;

# Kasra Alternates: cv62

lookup KasraAlternates {
  lookupflag 0 ;
    # NB: This is writen so it doesn't matter which shadda-kasra behavior is active.
    sub @Kasra_lowered from [ @Kasra_lowered @Kasra ];
    sub @Kasra         from [ @Kasra_lowered @Kasra ];
} KasraAlternates;

#********************
# Damma alternates: cv70

lookup DammaAlternates {
  lookupflag 0 ;
    sub @Damma from [ @Damma_filled @Damma_short ];
} DammaAlternates;

#********************
# SixNine Dammatan: cv72

lookup DammatanAlternate {
  lookupflag 0 ;
    sub @cno_sixNine by @c_sixNine ;
} DammatanAlternate;

#********************
# Inverted Damma alternates: cv74

lookup UntapeshAlternates {
  lookupflag 0 ;
    sub dammainverted-ar from [dammainverted-ar dammainverted-ar.filled] ;
} UntapeshAlternates;

#********************
# DaggerAlef alternates: cv76

lookup DaggerAlef_target {
    sub alefabove-ar from [ alefabove-ar.large alefabove-ar ] ;
} DaggerAlef_target;

lookup DaggerAlefToLarge {
  lookupflag 0 ;
    sub @TakesLargeDaggerAlef alefabove-ar' lookup DaggerAlef_target ;
} DaggerAlefToLarge;

#********************
# Sukun alternates: cv78

lookup SukunAlternates {
  lookupflag 0 ;
    sub sukun-ar from [ sukun-ar.downOpen sukun-ar.leftOpen ] ;
} SukunAlternates;

#********************
# End of Ayah alternates: cv80

lookup AyahAlternates {
  lookupflag 0 ;
    sub @Ayah from [ @Ayah.alt  @Ayah.altB ] ;
} AyahAlternates;

#********************
# Eastern digit alternates: cv82

lookup DigitAlternates {
  lookupflag 0 ;        #    1 = Sindhi-style      2 = Urdu-style      3 = Kurdish-style   4 = Rohingya-style
    sub @EasternDigit from [ @EasternDigitSindhi   @EasternDigitUrdu   @EasternDigit       @EasternDigitRohingya ] ;
} DigitAlternates;

#********************
# Comma alternates: cv84

lookup CommaAlternate {
  lookupflag IgnoreMarks ;
    sub @cno_downward by @c_downward;
} CommaAlternate;


#********
# Ligatures of marks

# NB: 
# The first three of these are executed as part of rlig and thus before the cvxx lookups
# The last lookup, however, is executed as part of liga as must be at the same time or later than cv62.
# See notes with feature liga.
#
lookup ComposeLowHamzaAbove {
  lookupflag UseMarkFilteringSet @HamzaAbove ;
    sub @LowHamzaBase hamzaabove-ar by @LowHamzaComposed ;
} ComposeLowHamzaAbove;

lookup HamzaLigatures {
  lookupflag UseMarkFilteringSet @HamzaLigatureParts ;
    sub hamzaabove-ar @HamzaMarks by @HamzaLigatures ;
    sub @HamzaMarks hamzaabove-ar by @HamzaLigatures ;
} HamzaLigatures;

lookup ShaddaLigatures {
  lookupflag MarkAttachmentType @ShaddaLigatureParts ;
    sub shadda-ar @ShaddaMarks by @ShaddaLigatures ;
    sub @ShaddaMarks shadda-ar by @ShaddaLigatures ;
} ShaddaLigatures;

lookup ShaddaKasraLigatures {
  lookupflag MarkAttachmentType @ShaddaLigatureParts ;
    sub @ShaddaKasraMarks shadda-ar by @ShaddaKasraLigatures ;
    sub shadda-ar @ShaddaKasraMarks by @ShaddaKasraLigatures ;
} ShaddaKasraLigatures;


#********************
# Positioning rules *
#********************

#********************
# Cursive connection

lookup cursive_exit_entry {
  lookupflag IgnoreMarks RightToLeft;
  pos cursive @entry @exit;
} cursive_exit_entry;


do if False;	# disable kerning for now
{
	
	#********************
	# Kerning
	
	lookup Kern_RehGaf_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos @RehAll  <-150 0 -150 0>;
	    pos @WawAll  <-50 0 -50 0>;
	} Kern_RehGaf_target ;
	
	lookup Kern_RehLoosen_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos @RehAll  <150 0 150 0>;
	    pos @WawAll  <150 0 150 0>;
	} Kern_RehLoosen_target ;
	
	lookup Kern_RehTighten_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos @RehTighten  <-100 0 -100 0>;
	    pos @RehTightenMore  <-170 0 -170 0>;
	    pos @WawTighten  <-50 0 -50 0>;
	    pos @WawTightenMore  <-100 0 -100 0>;
	} Kern_RehTighten_target ;
	
	lookup Kern_RehAinInit_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos @RehTighten  <-150 0 -150 0>;
	    pos @RehTightenMore  <-200 0 -200 0>;
	} Kern_RehAinInit_target ;
	
	lookup Kern_RehAinIsol_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos @RehAll  <100 0 100 0>;
	    pos @WawAll  <100 0 100 0>;
	} Kern_RehAinIsol_target ;
	
	lookup Kern_LamAlefTall_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos alef-ar.postLamIni.fina  <170 0 170 0>;
	} Kern_LamAlefTall_target ;
	
	lookup Kern_LamAlefMarkTall_target {
	  lookupflag 0 ;
	    #  subrule of type ADJUST_SINGLE
	    pos alefMadda-ar.postLamIni.fina  <170 0 170 0>;
	    pos alefMadda-ar.postLamIni.small.fina  <150 0 150 0>;
	    pos alefHamzaabove-ar.postLamIni.fina  <150 0 150 0>;
	    pos alefWasla-ar.postLamIni.fina  <170 0 170 0>;
	} Kern_LamAlefMarkTall_target ;
	
	lookup Kern {
	  lookupflag 0 ;
	  # Subtable: Kern\RehGaf
	    pos [ @RehAll @WawAll ]' lookup Kern_RehGaf_target @RehKernGaf ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehGaf_target @MarksBelow @RehKernGaf ;
	  # Subtable: Kern\RehLoosen
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @NarrowIni @MarksBelow ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @MarksAny @NarrowIni @MarksBelow ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @NarrowIni @MarksAbove @MarksBelow ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @MarksAny @NarrowIni @MarksAbove @MarksBelow ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target alef-ar [ rightarrowheadbelow-ar leftarrowheadbelow-ar ] ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @MarksAny alef-ar [ rightarrowheadbelow-ar leftarrowheadbelow-ar ] ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target alef-ar @MarksAny [ rightarrowheadbelow-ar leftarrowheadbelow-ar ] ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehLoosen_target @MarksAny alef-ar @MarksAny [ rightarrowheadbelow-ar leftarrowheadbelow-ar ] ;
	  # Subtable: Kern\RehTighten
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @NoTightenReh_B @MarksBelow ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @NoTightenReh_B @MarksAbove @MarksBelow ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAny @NoTightenReh_B @MarksBelow ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAny @NoTightenReh_B @MarksAbove @MarksBelow ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @NoTightenRehA_ ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @MarksBelow @NoTightenRehA_ ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksBelow @MarksAbove @NoTightenRehA_ ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @NoTightenRehA_A @MarksAbove ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @NoTightenRehA_A @MarksBelow @MarksAbove ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksBelow @MarksAbove @NoTightenRehA_A @MarksAbove ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @MarksBelow @NoTightenRehA_A @MarksAbove ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksBelow @MarksAbove @NoTightenRehA_A @MarksBelow @MarksAbove ;
	    ignore pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]'  @MarksAbove @MarksBelow @NoTightenRehA_A @MarksBelow @MarksAbove ;
	    pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]' lookup Kern_RehTighten_target @TightenReh_ ;
	    pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]' lookup Kern_RehTighten_target @MarksAny @TightenReh_ ;
	    pos [ @RehTighten @RehTightenMore @WawTighten @WawTightenMore ]' lookup Kern_RehTighten_target @MarksAny @MarksAny @TightenReh_ ;
	  # Subtable: Kern\RehAinInit
	    ignore pos [ @RehTighten @RehTightenMore ]'  @AinLikeInit @MarksBelow ;
	    ignore pos [ @RehTighten @RehTightenMore ]'  @MarksAny @AinLikeInit @MarksBelow ;
	    pos [ @RehTighten @RehTightenMore ]' lookup Kern_RehAinInit_target @AinLikeInit ;
	    pos [ @RehTighten @RehTightenMore ]' lookup Kern_RehAinInit_target @MarksAny @AinLikeInit ;
	  # Subtable: Kern\RehAinIsol
	    pos [ @RehAll @WawAll ]' lookup Kern_RehAinIsol_target @AinLikeIsol ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehAinIsol_target @MarksAny @AinLikeIsol ;
	    pos [ @RehAll @WawAll ]' lookup Kern_RehAinIsol_target @MarksAny @MarksAny @AinLikeIsol ;
	  # Subtable: Kern\LamAlefTall
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @Tall ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @MarksAny @Tall ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAny @MarksAbove @Tall ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @NarrowIni @MarksAbove ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @MarksAny @NarrowIni @MarksAbove ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAny @MarksAbove @NarrowIni @MarksAbove ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @NarrowIni @MarksAny @MarksAbove ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAbove @MarksAny @NarrowIni @MarksAny @MarksAbove ;
	    pos alef-ar.postLamIni.fina' lookup Kern_LamAlefTall_target @MarksAny @MarksAbove @NarrowIni @MarksAny @MarksAbove ;
	  # Subtable: Kern\LamAlefMarkTall
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @Tall ;
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @MarksAny @Tall ;
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @NarrowIni @MarksAbove ;
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @MarksAny @NarrowIni @MarksAbove ;
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @NarrowIni @MarksAny @MarksAbove ;
	    pos [ alefMadda-ar.postLamIni.fina alefMadda-ar.postLamIni.small.fina alefHamzaabove-ar.postLamIni.fina alefWasla-ar.postLamIni.fina ]' lookup Kern_LamAlefMarkTall_target @MarksAny @NarrowIni @MarksAny @MarksAbove ;
	} Kern;

}

#********************
# Mark attachment

lookup mark_to_base {
  lookupflag 0;
  pos base @diaA mark @_diaA;
  pos base @diaB mark @_diaB;
} mark_to_base;

lookup alef_to_base {
  lookupflag 0;
  pos base @alef mark @_alef;
} alef_to_base;

lookup mark2_to_base {
  lookupflag 0;
  pos base @dia2B mark @_diaB;
} mark2_to_base;

@MarkFilter_diaA = [@diaA_MarkBase @_diaA];
lookup mark_to_mark_above {
  lookupflag UseMarkFilteringSet @MarkFilter_diaA;
  pos mark @diaA_MarkBase mark @_diaA;
} mark_to_mark_above;

@MarkFilter_diaB = [@diaB_MarkBase @_diaB];
lookup mark_to_mark_below {
  lookupflag UseMarkFilteringSet @MarkFilter_diaB;
  pos mark @diaB_MarkBase mark @_diaB;
} mark_to_mark_below;

#********************
# Mark adjustments after attachment:

# move MarksBelow slightly left on lam-alef when appropriate:
lookup AlefMark2BelowAfterLam {
  lookupflag UseMarkFilteringSet @MarksBelow ;
    pos [lamThreedotsbelow-ar.preAlef.init @MarksBelow] @dia2B' lookup mark2_to_base @MarksBelow' ;
    pos [lamThreedotsbelow-ar.preAlef.init @MarksBelow] @dia2B' lookup mark2_to_base @MarksAbove' @MarksBelow' ;
    pos [lamThreedotsbelow-ar.preAlef.init @MarksBelow] @MarksAbove @dia2B' lookup mark2_to_base @MarksBelow' ;
    pos [lamThreedotsbelow-ar.preAlef.init @MarksBelow] @MarksAbove @dia2B' lookup mark2_to_base @MarksAbove' @MarksBelow' ;
    #pos @MarksBelow @AllAlefFinAfterLam @MarksBelow' <-50 0 0 0> ;
    #pos lamThreedotsbelow-ar.preAlef.init @AllAlefFinAfterLam @MarksBelow' <-50 0 0 0> ;
    # Unneeded in Harmattan design:
    #pos lamThreedotsbelow-ar.preAlef.medi @AllAlefFinAfterLam @MarksBelow' <-50 0 0 0> ;
} AlefMark2BelowAfterLam;

# Lower MarksBelow if they crash with the tail of yeh barree final:
lookup MarkKern {
  lookupflag 0 ;
    pos @YehBarreeMarkLower @MarksBelow'             < 0 -300 0 0> yehbarree-ar.fina ;
    pos @YehBarreeMarkLower @MarksAbove @MarksBelow' < 0 -300 0 0> yehbarree-ar.fina ;
    pos @YehBarreeMarkLower @MarksBelow'             < 0 -300 0 0> @MarksAbove yehbarree-ar.fina ;
} MarkKern;

#********************
# Subtending mark positioning

lookup SubtendingMarks {
  lookupflag IgnoreMarks ;
    # In Graphite we use mark attachment rules. However, in OpenType positioning digits on 
    # subtending marks has to be done with adjustments rather than attachment since for some 
    # engines the digits will ordered *before* the subtending mark.
    
    # Additionally, the adjustment value records depend on font face (bold vs regular). Therefore
    # we use feax extentions to calculate the value records based on glyph advancewidths and digit AP coordinates.
    
    # In each "do" template, the first rule is ordered for Uniscribe or HarfBuzz 'latin', the second for HarfBuzz 'arab'
    
    # U+06DD End of Ayah
    do let w = -ADVx("zero.small"); let x1 = APx("endofayah-ar.3", "digitR") - ADVx("endofayah-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos @AyahAny @DigitsAnySmall' <$x1 0 $w 0>   @DigitsAnySmall' <$x2 0 $w 0>   @DigitsAnySmall' <$x3 0 $w 0> ;
        pos          @DigitsAnySmall' <$x3 0 $w 0>   @DigitsAnySmall' <$x2 0 $w 0>   @DigitsAnySmall' <$x1 0 $w 0>  @AyahAny ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("endofayah-ar.2", "digitR") - ADVx("endofayah-ar.2"); let x2 = x1 - w; 
    {
        pos @AyahAny @DigitsAnyMedium' <$x1 0 $w 0>  @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos          @DigitsAnyMedium' <$x2 0 $w 0>  @DigitsAnyMedium' <$x1 0 $w 0>  @AyahAny ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("endofayah-ar", "digitR") - ADVx("endofayah-ar");
    {
        pos @AyahAny @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos          @DigitsAnyMedium' <$x1 0 $w 0> @AyahAny ;
    }

    # U+0600 Number sign
    do let w = -ADVx("zero.medium"); let x1 = APx("number-ar.3", "digitR") - ADVx("number-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos number-ar.3 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> number-ar.3 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("number-ar.2", "digitR") - ADVx("number-ar.2"); let x2 = x1 - w;
    {
        pos number-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> number-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("number-ar", "digitR") - ADVx("number-ar"); 
    {
        pos number-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x1 0 $w 0> number-ar ;
    }
    
    # U+0601 Year sign
    do let w = -ADVx("zero.medium"); let x1 = APx("year-ar.4", "digitR") - ADVx("year-ar.4"); let x2 = x1 - w; let x3 = x2 - w; let x4 = x3 - w;
    {
        pos year-ar.4 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x4 0 $w 0> ;
        pos           @DigitsAnyMedium' <$x4 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> year-ar.4 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("year-ar.3", "digitR") - ADVx("year-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos year-ar.3 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> ;
        pos           @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> year-ar.3 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("year-ar.2", "digitR") - ADVx("year-ar.2"); let x2 = x1 - w;
    {
        pos year-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos           @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> year-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("year-ar", "digitR") - ADVx("year-ar"); 
    {
        pos year-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos           @DigitsAnyMedium' <$x1 0 $w 0> year-ar ;
    }
    
    # U+0602 Footnote Marker
    do let w = -ADVx("zero.medium"); let x1 = APx("footnotemarker-ar.2", "digitR") - ADVx("footnotemarker-ar.2"); let x2 = x1 - w;
    {
        pos footnotemarker-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos                     @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> footnotemarker-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("footnotemarker-ar", "digitR") - ADVx("footnotemarker-ar"); 
    {
        pos footnotemarker-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos                     @DigitsAnyMedium' <$x1 0 $w 0> footnotemarker-ar ;
    }
    
    # U+0603 Page Number
    do let w = -ADVx("zero.medium"); let x1 = APx("pagenumber-ar.4", "digitR") - ADVx("pagenumber-ar.4"); let x2 = x1 - w; let x3 = x2 - w; let x4 = x3 - w;
    {
        pos pagenumber-ar.4 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x4 0 $w 0>;
        pos                 @DigitsAnyMedium' <$x4 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> pagenumber-ar.4 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("pagenumber-ar.3", "digitR") - ADVx("pagenumber-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos pagenumber-ar.3 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> pagenumber-ar.3 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("pagenumber-ar.2", "digitR") - ADVx("pagenumber-ar.2"); let x2 = x1 - w;
    {
        pos pagenumber-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> pagenumber-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("pagenumber-ar", "digitR") - ADVx("pagenumber-ar"); 
    {
        pos pagenumber-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x1 0 $w 0> pagenumber-ar ;
    }
    
    # U+0604 Samvat sign
    do let w = -ADVx("zero.medium"); let x1 = APx("samvat-ar.4", "digitR") - ADVx("samvat-ar.4"); let x2 = x1 - w; let x3 = x2 - w; let x4 = x3 - w;
    {
        pos samvat-ar.4 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x4 0 $w 0>;
        pos             @DigitsAnyMedium' <$x4 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> samvat-ar.4 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("samvat-ar.3", "digitR") - ADVx("samvat-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos samvat-ar.3 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> samvat-ar.3 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("samvat-ar.2", "digitR") - ADVx("samvat-ar.2"); let x2 = x1 - w;
    {
        pos samvat-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> samvat-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("samvat-ar", "digitR") - ADVx("samvat-ar"); 
    {
        pos samvat-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos             @DigitsAnyMedium' <$x1 0 $w 0> samvat-ar ;
    }
    
    # U+0605 Number mark
    do let w = -ADVx("zero.medium"); let x1 = APx("numbermark-ar.4", "digitR") - ADVx("numbermark-ar.4"); let x2 = x1 - w; let x3 = x2 - w; let x4 = x3 - w;
    {
        pos numbermark-ar.4 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x4 0 $w 0>;
        pos                 @DigitsAnyMedium' <$x4 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> numbermark-ar.4 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("numbermark-ar.3", "digitR") - ADVx("numbermark-ar.3"); let x2 = x1 - w; let x3 = x2 - w;
    {
        pos numbermark-ar.3 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x3 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x3 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> numbermark-ar.3 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("numbermark-ar.2", "digitR") - ADVx("numbermark-ar.2"); let x2 = x1 - w;
    {
        pos numbermark-ar.2 @DigitsAnyMedium' <$x1 0 $w 0> @DigitsAnyMedium' <$x2 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x2 0 $w 0> @DigitsAnyMedium' <$x1 0 $w 0> numbermark-ar.2 ;
    }
    do let w = -ADVx("zero.medium"); let x1 = APx("numbermark-ar", "digitR") - ADVx("numbermark-ar"); 
    {
        pos numbermark-ar   @DigitsAnyMedium' <$x1 0 $w 0> ;
        pos                 @DigitsAnyMedium' <$x1 0 $w 0> numbermark-ar ;
    }
    
do if False;
{
    # For reference: This was the way we did it in Harmattan 1.0 :
            
    # Uniscribe or HarfBuzz 'latn'
    pos @AyahAny @DigitsAnySmall'  <-1754 0 -494 0> @DigitsAnySmall'  <-1260 0 -494 0> @DigitsAnySmall' <-766 0 -494 0> ;
    pos @AyahAny @DigitsAnyMedium' <-1686 0 -674 0> @DigitsAnyMedium' <-1012 0 -674 0> ;
    pos @AyahAny @DigitsAnyMedium' <-1346 0 -674 0> ;

    pos number-ar.3 @DigitsAnyMedium' <-2649 0 -674 0> @DigitsAnyMedium' <-1975 0 -674 0> @DigitsAnyMedium' <-1301 0 -674 0> ;
    pos number-ar.2 @DigitsAnyMedium' <-1973 0 -674 0> @DigitsAnyMedium' <-1299 0 -674 0> ;
    pos number-ar   @DigitsAnyMedium' <-1280 0 -674 0> ;

    pos year-ar.4 @DigitsAnyMedium' <-3020 0 -674 0> @DigitsAnyMedium' <-2346 0 -674 0> @DigitsAnyMedium' <-1672 0 -674 0> @DigitsAnyMedium' < -998 0 -674 0> ;
    pos year-ar.3 @DigitsAnyMedium' <-2310 0 -674 0> @DigitsAnyMedium' <-1636 0 -674 0> @DigitsAnyMedium' < -962 0 -674 0> ;
    pos year-ar.2 @DigitsAnyMedium' <-1620 0 -674 0> @DigitsAnyMedium' < -946 0 -674 0> ;
    pos year-ar   @DigitsAnyMedium' < -980 0 -674 0> ;

    pos footnotemarker-ar.2 @DigitsAnyMedium' <-1533 0 -674 0> @DigitsAnyMedium' <-859 0 -674 0> ;
    pos footnotemarker-ar   @DigitsAnyMedium' < -863 0 -674 0> ;

    pos pagenumber-ar.4 @DigitsAnyMedium' <-3884 0 -674 0> @DigitsAnyMedium' <-3210 0 -674 0> @DigitsAnyMedium' <-2536 0 -674 0> @DigitsAnyMedium' <-1862 0 -674 0> ;
    pos pagenumber-ar.3 @DigitsAnyMedium' <-3204 0 -674 0> @DigitsAnyMedium' <-2530 0 -674 0> @DigitsAnyMedium' <-1856 0 -674 0> ;
    pos pagenumber-ar.2 @DigitsAnyMedium' <-2444 0 -674 0> @DigitsAnyMedium' <-1770 0 -674 0> ;
    pos pagenumber-ar   @DigitsAnyMedium' <-1844 0 -674 0> ;

    pos samvat-ar.4 @DigitsAnyMedium' <-3722 0 -674 0> @DigitsAnyMedium' <-3048 0 -674 0> @DigitsAnyMedium' <-2374 0 -674 0> @DigitsAnyMedium' <-1700 0 -674 0> ;
    pos samvat-ar.3 @DigitsAnyMedium' <-3040 0 -674 0> @DigitsAnyMedium' <-2366 0 -674 0> @DigitsAnyMedium' <-1692 0 -674 0> ;
    pos samvat-ar.2 @DigitsAnyMedium' <-2359 0 -674 0> @DigitsAnyMedium' <-1685 0 -674 0> ;
    pos samvat-ar @DigitsAnyMedium' <-1735 0 -674 0> ;


    # HarfBuzz 'arab'
    	
    pos @DigitsAnySmall'  < -766 0 -494 0> @DigitsAnySmall'  <-1260 0 -494 0> @DigitsAnySmall' <-1754 0 -494 0> @AyahAny ;
    pos @DigitsAnyMedium' <-1012 0 -674 0> @DigitsAnyMedium' <-1686 0 -674 0> @AyahAny ;
    pos @DigitsAnyMedium' <-1346 0 -674 0> @AyahAny ;

    pos @DigitsAnyMedium' <-1301 0 -674 0> @DigitsAnyMedium' <-1975 0 -674 0> @DigitsAnyMedium' <-2649 0 -674 0> number-ar.3 ;
    pos @DigitsAnyMedium' <-1299 0 -674 0> @DigitsAnyMedium' <-1973 0 -674 0> number-ar.2 ;
    pos @DigitsAnyMedium' <-1280 0 -674 0> number-ar ;

    pos @DigitsAnyMedium' <-998 0 -674 0> @DigitsAnyMedium' <-1672 0 -674 0> @DigitsAnyMedium' <-2346 0 -674 0> @DigitsAnyMedium' <-3020 0 -674 0> year-ar.4 ;
    pos @DigitsAnyMedium' <-962 0 -674 0> @DigitsAnyMedium' <-1636 0 -674 0> @DigitsAnyMedium' <-2310 0 -674 0> year-ar.3 ;
    pos @DigitsAnyMedium' <-946 0 -674 0> @DigitsAnyMedium' <-1620 0 -674 0> year-ar.2 ;
    pos @DigitsAnyMedium' <-980 0 -674 0> year-ar ;

    pos @DigitsAnyMedium' <-859 0 -674 0> @DigitsAnyMedium' <-1533 0 -674 0> footnotemarker-ar.2 ;
    pos @DigitsAnyMedium' <-863 0 -674 0> footnotemarker-ar ;

    pos @DigitsAnyMedium' <-1862 0 -674 0> @DigitsAnyMedium' <-2536 0 -674 0> @DigitsAnyMedium' <-3210 0 -674 0> @DigitsAnyMedium' <-3884 0 -674 0> pagenumber-ar.4 ;
    pos @DigitsAnyMedium' <-1856 0 -674 0> @DigitsAnyMedium' <-2530 0 -674 0> @DigitsAnyMedium' <-3204 0 -674 0> pagenumber-ar.3 ;
    pos @DigitsAnyMedium' <-1770 0 -674 0> @DigitsAnyMedium' <-2444 0 -674 0> pagenumber-ar.2 ;
    pos @DigitsAnyMedium' <-1844 0 -674 0> pagenumber-ar ;

    pos @DigitsAnyMedium' <-1700 0 -674 0> @DigitsAnyMedium' <-2374 0 -674 0> @DigitsAnyMedium' <-3048 0 -674 0> @DigitsAnyMedium' <-3722 0 -674 0> samvat-ar.4 ;
    pos @DigitsAnyMedium' <-1692 0 -674 0> @DigitsAnyMedium' <-2366 0 -674 0> @DigitsAnyMedium' <-3040 0 -674 0> samvat-ar.3 ;
    pos @DigitsAnyMedium' <-1685 0 -674 0> @DigitsAnyMedium' <-2359 0 -674 0> samvat-ar.2 ;
    pos @DigitsAnyMedium' <-1735 0 -674 0> samvat-ar ;
}

} SubtendingMarks;


#**********************************
#  Features
#**********************************

# as best as I understand, these are arranged in the order MS & HB engines execute:

#********************
# GSUB features     *
#********************

feature ccmp {  # Glyph Composition/Decomposition
    # Same for latin & arabic:
        lookup SmallMaddah;
        # DecomposeForColor executes here for Arabic
        lookup FontCheck;
        sub @Kasra by @Kasra_lowered;	# Harmattan defaults to lowered kasra
        lookup ReorderMaddaVowel1;
        lookup ReorderMaddaVowel2;
    script arab;  # Arabic
        lookup DecomposeForColor;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} ccmp ;

# feature locl

# HB PAUSE

feature fina {  # Terminal Forms
    script arab;  # Arabic
        lookup ltrFina;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} fina ;

# HB PAUSE

feature medi {  # Medial Forms
    script arab;  # Arabic
        lookup ltrMedi;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} medi ;

# HB PAUSE

feature init {  # Initial Forms
    script arab;  # Arabic
        lookup ltrInit;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} init ;

# HB PAUSE

feature rlig {  # Required Ligatures
    script arab;  # Arabic
        lookup AllahLigatures;
        lookup LigaturesForWarsh1;
        lookup LigaturesForWarsh2;
        lookup LigaturesForWarsh3;
        lookup LamAlefLigatures;
        lookup ShaddaLigatures;
        lookup ComposeLowHamzaAbove;
        lookup HamzaLigatures;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} rlig ;

# HB PAUSE

# NB: We use calt for language-specific alternates rather than locl because
#     the heh localizations don't affect all forms of heh so we need the lookups
#     to execute after init/medi/fina lookups, but locl executes before.

feature calt {  # Contextual Alternates
    # Same for latin & arabic:
        lookup SignWithDigits;
        # lookup SignDigits;
    script arab;  # Arabic
      language KUR ; # Kurdish
        lookup KurdishCALT ;
      language SND ; # Sindhi
        lookup SindhiCALT ;
      language URD ; # Urdu
        lookup UrduCALT ;
      language WLF ; # Wolof
        lookup WolofCALT ;
} calt ;

# feature rclt

# HB PAUSE

# HB puts everything else (clig, liga, cvXX, ssXX, salt) in one pass:

feature salt {  # Stylistic Alternates
    script arab;  # Arabic
        lookup AyahAlternates;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} salt ;

feature cv02 {  # Character Variant 02
    script arab;  # Arabic
        lookup WarshAlternates;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Alef diacritic placement" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"       ; };
        ParamUILabelNameID { name 3 1 0x0409 "Hamza touching" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Touching"       ; };
    } ;
} cv02 ;

feature cv08 {  # Character Variant 08
    script arab;  # Arabic
        lookup JeemHahMedAlternate;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Jeem/Hah"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Handwritten" ; };
            } ;
} cv08 ;

feature cv12 {  # Character Variant 12
    script arab;  # Arabic
        lookup DalAlternate;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      # language WLF  ;  But not this one since we enable it in the WolofCALT
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Dal"       ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"  ; };
        ParamUILabelNameID { name 3 1 0x0409 "Alternate" ; };
            } ;
} cv12 ;

feature cv20 {  # Character Variant 20
    script arab;  # Arabic
        lookup SadDadAlternate;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Sad/Dad"  ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Half"     ; };
    } ;
} cv20 ;

feature cv44 {  # Character Variant 44
    script arab;  # Arabic
        lookup MeemAlternate;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      # language SND  ;  But not this one since we enable it in SindhiCALT
      language URD  ;
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Meem"       ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Sindi-style"; };
    } ;
} cv44 ;

feature cv48 {  # Character Variant 48
    script arab;  # Arabic
        language dflt;  # Default
            lookup HehAlternates;
      # Force other languages to include Arabic script lookups
      # language KUR  ;  But not this one since we enable it in KurdishCALT
      # language SND  ;  But not this one since we enable it in SindhiCALT
      # language URD  ;  But not this one since we enable it in UrduCALT
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Heh"            ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"       ; };
        ParamUILabelNameID { name 3 1 0x0409 "Sindi-style"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Urdu-style"     ; };
        ParamUILabelNameID { name 3 1 0x0409 "Kurdish-style"  ; };
    } ;
} cv48 ;

feature cv50 {  # Character Variant 50
    script arab;  # Arabic
        language dflt;  # Default
            lookup UAlternate;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Arabic U" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Filled"   ; };
    } ;
} cv50 ;

feature cv60 {  # Character Variant 60
    # Same for latin & arabic:
        lookup MaddahAlternate;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Maddah"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Small"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Large"    ; };
    } ;
} cv60 ;

feature cv62 {  # Character Variant 62
    # Same for latin & arabic:
        lookup KasraAlternates;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Kasra"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Default" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Lowered" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Raised"  ; };
    } ;
} cv62 ;

feature cv70 {  # Character Variant 70
    # Same for latin & arabic:
        lookup DammaAlternates;
    # Except Wolof where it is already set to short
    script arab ;
        language WLF exclude_dflt ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Damma"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Default" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Filled"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Short"    ; };
    } ;
} cv70 ;

feature cv72 {  # Character Variant 72
    # Same for latin & arabic:
        lookup DammatanAlternate;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Dammatan" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Six-nine" ; };
    } ;
} cv72 ;

feature cv74 {  # Character Variant 74
    # Same for latin & arabic:
        lookup UntapeshAlternates;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Inverted Damma" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Default"        ; };
        ParamUILabelNameID { name 3 1 0x0409 "Hollow"         ; };
        ParamUILabelNameID { name 3 1 0x0409 "Filled"         ; };
    } ;
} cv74 ;

feature cv76 {  # Character Variant 76
    # Same for latin & arabic:
        lookup DaggerAlefToLarge;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Superscript Alef" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Small"            ; };
        ParamUILabelNameID { name 3 1 0x0409 "Large"            ; };
    } ;
} cv76 ;

feature cv78 {  # Character Variant 78
    # Same for latin & arabic:
        lookup SukunAlternates;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Sukun"     ; };
        ParamUILabelNameID { name 3 1 0x0409 "Closed"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Open down" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Open left" ; };
    } ;
} cv78 ;

feature cv80 {  # Character Variant 80
    # Same for latin & arabic:
        lookup AyahAlternates;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "End of ayah"  ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"     ; };
        ParamUILabelNameID { name 3 1 0x0409 "Simplified A" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Simplified B" ; };
    } ;
} cv80 ;

feature cv82 {  # Character Variant 82
    # Same for latin & arabic:
        lookup DigitAlternates;
    # Except Sindhi, Urdu, and, if we had it, Rohingya
    script arab ;
        language KUR exclude_dflt ;
        language SND exclude_dflt ;
        language URD exclude_dflt ;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Eastern digits" ; };
        ParamUILabelNameID { name 3 1 0x0409 "Standard"       ; };
        ParamUILabelNameID { name 3 1 0x0409 "Sindhi-style"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Urdu-style"     ; };
      # ParamUILabelNameID { name 3 1 0x0409 "Kurdish-style"  ; };
      # ParamUILabelNameID { name 3 1 0x0409 "Rohingya-style" ; };
    } ;
} cv82 ;

feature cv84 {  # Character Variant 84
    # Same for latin & arabic:
        lookup CommaAlternate;
    cvParameters {
        FeatUILabelNameID  { name 3 1 0x0409 "Comma"    ; };
        ParamUILabelNameID { name 3 1 0x0409 "Upward"   ; };
        ParamUILabelNameID { name 3 1 0x0409 "Downward" ; };
    } ;
} cv84 ;

# In order for the cv62 lookup to function, we need to execute the ShaddaKasraLigatures in the
# same or later pass as cv62 itself, and it has to execute whether or not cv62 feature is requested,
# so it has to be part of some other feature. In Harfbuzz, we could use either clig, or liga since they
# are pulled in from the Horizontal features that follow shaper-specific features and are, therefore
# executed at the same time as cvXX.

# When rendered with Uniscribe or Word, cv62 is never executed [as of this writing, at any rate].
# But we still need the ShaddaKasraLigatures lookup to fire. Presently Microsoft doesn't 
# fire clig, so liga must be the one to use!

feature liga {  # Ligatures  -- we use this because liga is done in the same pass as cv62
    # Same for latin & arabic:
        lookup ShaddaKasraLigatures;
} liga ;


#********************
# GPOS features     *
#********************

# Would love to be able to do subtending marks as either cursive connection or mark attachment
# Cursive connection doesn't work because the width of the resultant cluster needs to be exactly the
# same as the subtending mark and unrelated to the widths of the digits.
# In Firefox at least, mark attachment works for 06DD (end of Ayah) and latin digits, but no other 
# marks or digits (the digits get reverse ordered by the attachment process).
# So we're back to using kerning

feature kern {  # Kerning
    # Same for latin & arabic:
        lookup SubtendingMarks;

do if False;	# disable kerning for now
{
	    script arab;  # Arabic
	        lookup Kern;
	      # Force other languages to include Arabic script lookups
	      language KUR  ;
	      language SND  ;
	      language URD  ;
	      language WLF  ;
}
	} kern ;

feature curs { # Cursive connection
    script arab; # Arab
        lookup cursive_exit_entry;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} curs ;

feature mark {  # Mark to base Positioning
    # Same for latin & arabic:
        lookup mark_to_base;
        lookup alef_to_base;
    script arab;  # Arabic
        lookup AlefMark2BelowAfterLam;
        lookup MarkKern;
      # Force other languages to include Arabic script lookups
      language KUR  ;
      language SND  ;
      language URD  ;
      language WLF  ;
} mark ;

feature mkmk {  # Mark to mark Positioning
    # Same for latin & arabic:
        lookup mark_to_mark_above;
        lookup mark_to_mark_below;
} mkmk ;
